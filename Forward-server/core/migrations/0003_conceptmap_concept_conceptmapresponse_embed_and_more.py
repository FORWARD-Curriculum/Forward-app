# Generated by Django 5.1.6 on 2025-04-20 05:40

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_identification_remove_user_date_of_birth_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConceptMap',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='the uuid of the database item', primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='The title of the activity', max_length=200, validators=[django.core.validators.MinLengthValidator(3)])),
                ('instructions', models.TextField(help_text='Instructions for completing the activity', null=True)),
                ('order', models.PositiveIntegerField(help_text='Order within the lesson')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.CharField(default='', max_length=50000)),
                ('lesson', models.ForeignKey(help_text='The lesson this activity belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_activities', to='core.lesson')),
            ],
            options={
                'ordering': ['order', 'created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='the uuid of the database item', primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='The title of the activity', max_length=200, validators=[django.core.validators.MinLengthValidator(3)])),
                ('instructions', models.TextField(help_text='Instructions for completing the activity', null=True)),
                ('order', models.PositiveIntegerField(help_text='Order within the lesson')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('description', models.TextField(help_text='A detailed description of the concept')),
                ('examples', models.JSONField(default=list, help_text='List of examples for this concept')),
                ('lesson', models.ForeignKey(help_text='The lesson this activity belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_activities', to='core.lesson')),
                ('concept_map', models.ForeignKey(help_text='The concept map this concept belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='concepts', to='core.conceptmap')),
            ],
            options={
                'ordering': ['order', 'created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConceptMapResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='the uuid of the database item', primary_key=True, serialize=False)),
                ('partial_response', models.BooleanField(default=True)),
                ('time_spent', models.PositiveIntegerField(default=0)),
                ('attempts_left', models.PositiveIntegerField(default=0)),
                ('associated_activity', models.ForeignKey(help_text='The concept map associated with this response', on_delete=django.db.models.deletion.CASCADE, related_name='associated_conceptmap', to='core.conceptmap')),
                ('lesson', models.ForeignKey(help_text='The lesson related to this response', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lesson', to='core.lesson')),
                ('user', models.ForeignKey(help_text='The user who submitted this response', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_response_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Embed',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='the uuid of the database item', primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='The title of the activity', max_length=200, validators=[django.core.validators.MinLengthValidator(3)])),
                ('instructions', models.TextField(help_text='Instructions for completing the activity', null=True)),
                ('order', models.PositiveIntegerField(help_text='Order within the lesson')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('link', models.TextField(help_text='a valid link')),
                ('code', models.TextField(blank=True, default=None, help_text='A string of a code to determine if the user may procede', null=True)),
                ('lesson', models.ForeignKey(help_text='The lesson this activity belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_activities', to='core.lesson')),
            ],
            options={
                'verbose_name': 'embed',
                'verbose_name_plural': 'embeds',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmbedResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='the uuid of the database item', primary_key=True, serialize=False)),
                ('partial_response', models.BooleanField(default=True)),
                ('time_spent', models.PositiveIntegerField(default=0)),
                ('attempts_left', models.PositiveIntegerField(default=0)),
                ('associated_activity', models.ForeignKey(help_text='The embed activity associated with this response', on_delete=django.db.models.deletion.CASCADE, related_name='associated_embed', to='core.embed')),
                ('lesson', models.ForeignKey(help_text='The lesson related to this response', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lesson', to='core.lesson')),
                ('user', models.ForeignKey(help_text='The user who submitted this response', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_response_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
