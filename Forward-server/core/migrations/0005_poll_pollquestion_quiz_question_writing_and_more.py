# Generated by Django 5.1.6 on 2025-02-21 04:35

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0004_section'),
    ]

    operations = [
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the activity', max_length=200, validators=[django.core.validators.MinLengthValidator(3)])),
                ('instructions', models.TextField(help_text='Instructions for completing the activity')),
                ('order', models.PositiveIntegerField(help_text='Order within the lesson')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('config', models.JSONField(default=dict, help_text='Configuration for whatever the fuck idk yet')),
                ('lesson', models.ForeignKey(help_text='The lesson this activity belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_activities', to='core.lesson')),
            ],
            options={
                'ordering': ['order', 'created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PollQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poll', models.ForeignKey(help_text='The poll that this poll question belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='polls', to='core.poll')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the activity', max_length=200, validators=[django.core.validators.MinLengthValidator(3)])),
                ('instructions', models.TextField(help_text='Instructions for completing the activity')),
                ('order', models.PositiveIntegerField(help_text='Order within the lesson')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('passing_score', models.PositiveIntegerField(help_text='Minimum score required to pass the quiz')),
                ('feedback_config', models.JSONField(default=dict, help_text='Configuration for feedback based on score ranges')),
                ('lesson', models.ForeignKey(help_text='The lesson this activity belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_activities', to='core.lesson')),
            ],
            options={
                'verbose_name': 'quiz',
                'verbose_name_plural': 'quizzes',
                'ordering': ['order', 'created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(help_text='The text of the question')),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('multiple_select', 'Multiple Select')], help_text='The type of question', max_length=20)),
                ('has_correct_answer', models.BooleanField(default=True, help_text='Whether this question has correct answers')),
                ('choices', models.JSONField(help_text='Available choices and correct answers in JSON format')),
                ('is_required', models.BooleanField(default=True, help_text='Whether this question must be answered')),
                ('order', models.PositiveIntegerField(help_text='Order within the quiz')),
                ('quiz', models.ForeignKey(help_text='The quiz this question belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.quiz')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Writing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the activity', max_length=200, validators=[django.core.validators.MinLengthValidator(3)])),
                ('instructions', models.TextField(help_text='Instructions for completing the activity')),
                ('order', models.PositiveIntegerField(help_text='Order within the lesson')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('prompts', models.JSONField(default=list, help_text='List of writing prompts for the activity')),
                ('lesson', models.ForeignKey(help_text='The lesson this activity belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_activities', to='core.lesson')),
            ],
            options={
                'verbose_name': 'writing activity',
                'verbose_name_plural': 'writing activities',
                'ordering': ['order', 'created_at'],
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='Section',
        ),
    ]
